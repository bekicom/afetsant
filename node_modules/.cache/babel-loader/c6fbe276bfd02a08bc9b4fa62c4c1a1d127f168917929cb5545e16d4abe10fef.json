{"ast":null,"code":"import axios from'axios';import{BASE_URL}from'utils/constants';const configuration=token=>{return{validateStatus:function(status){if([403,401].includes(status)){localStorage.clear();window.location.href='/login';}return status>=200&&status<300;},headers:{Authorization:\"Bearer \".concat(token)}};};const defaultRequest=new Promise((resolve,reject)=>{resolve('Success');reject('Error');});export const getRequest=(url,token)=>{const config=configuration(token);return token?axios.get(BASE_URL+url,config):defaultRequest;};export const postRequest=function(url){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let token=arguments.length>2?arguments[2]:undefined;const config=configuration(token);return token?axios.post(BASE_URL+url,data,config):defaultRequest;};export const patchRequest=function(url){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let token=arguments.length>2?arguments[2]:undefined;const config=configuration(token);return token?axios.patch(BASE_URL+url,data,config):defaultRequest;};export const deleteRequest=(url,token)=>{const config=configuration(token);return token?axios.delete(BASE_URL+url,config):defaultRequest;};export const post=function(url){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let config=arguments.length>2?arguments[2]:undefined;return axios.post(BASE_URL+url,data,config);};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}