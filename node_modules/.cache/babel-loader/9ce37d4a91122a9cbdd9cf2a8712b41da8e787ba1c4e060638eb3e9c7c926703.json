{"ast":null,"code":"import React,{Suspense,useEffect}from'react';import{Route,Routes,useLocation}from'react-router-dom';import{useDispatch}from'react-redux';import routes from'./routes';import Header from'components/header';import{useUser}from'./redux/selectors';import{setRooms}from'./redux/rooms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SOCKET_SERVER_URL='wss://epos-admin.dadabayev.uz/websocket/';const privatPages=['/register','/login'];const App=()=>{const{pathname}=useLocation();const user=useUser();const dispatch=useDispatch();useEffect(()=>{const socket=new WebSocket(SOCKET_SERVER_URL);// Replace with your WebSocket server URL\nsocket.onopen=()=>{console.log('Connected to WebSocket server');const message=JSON.stringify({method:'createUser',ownerId:user===null||user===void 0?void 0:user.id// Replace $owner_id with the actual owner ID value\n});socket.send(message);};socket.onmessage=event=>{const message=JSON.parse((event===null||event===void 0?void 0:event.data)||'{}');console.log(message);if((message===null||message===void 0?void 0:message.method)==='updateRooms'){dispatch(setRooms(message===null||message===void 0?void 0:message.rooms));}};socket.onclose=()=>{console.log('Disconnected from WebSocket server');};return()=>{socket.close();};},[user===null||user===void 0?void 0:user.id]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[privatPages.includes(pathname)?null:/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{className:\"lds-dual-ring app-loader\"}),children:/*#__PURE__*/_jsx(Routes,{children:routes.map(route=>/*#__PURE__*/_jsx(Route,{path:route.path,element:route.element},route.path))})})]});};export default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}